<% @title = "Item: #{@item.name}" %>

<section id="content" xmlns="http://www.w3.org/1999/html">
  <div class="row">
    <%= erb :_sidebar %>

    <div class="span10">
      <h1>Item: <%= xss @item.name %></h1>

      <table class="table" style="width: 66%"><tr><%= erb :_item_button, :locals => {:item => @item, :current_user => @current_agent} %><%= erb :_item_wishlist_button %></tr></table>

      <%= erb :_image_rect, :locals => {:filename => @item.image_file_name, :size => LARGEIMAGESIZE} %>

      <table class="table table-bordered" style="width: 66%">
        <tr>
          <td>Owner:</td>
          <td><%= erb :_user_link, :locals => {:user => @item.owner} %></td>
        </tr>
        <tr>
          <td>Price</td>
          <td><%= xss ts(@item.price) %></td>
        </tr>
        <tr>
          <td>Description:</td>
          <td><%= mdown_to_html(xss @item.about) %></td>
        </tr>
      </table>


      <h3>Comments</h3>
      <%if @item.comments.length == 0%>
        This item has no comments yet.
      <%else%>

          <%
          page = params[:commentspage] ? params[:commentspage].to_i : 0
            %>
          <%= erb :_pages_links, :locals => {:cur_page => page,
                                             :size => @item.comments.size,
                                             :per_page => COMMENTS_PER_PAGE,
                                             :identifier => :commentspage}
          %>

          <table class="table table-striped" style="width: 66%">
            <% @item.comments.reverse.each_with_index do |comment, index| %>
            <% next unless index/COMMENTS_PER_PAGE == page %>
            <tr>
              <td> <%= erb :_user_link, :locals => {:user => comment.creator} %>
                <%if comment.creator == @item.owner %>
                <span class="label label-success">Owner</span>
                <%end%>
              </td>
              <td> <%= mdown_to_html(xss comment.text) %> </td>
              <td>
                <form action="#" method="POST">
                  <input type="hidden" name="creator" value="<%= xss comment.creator %>" />
                  <input type="hidden" name="quote" value="<%= xss comment.text %>" />
                  <button class="btn btn-info small" name="reply"
                      onClick="document.getElementById('newCommentArea').value='<%= xss comment.creator.name; %> wrote:\n > <%= xss comment.text.tr("\r\n", " ") %>'; return false;">Reply</button>
                </form>
              </td>
            </tr>
            <%end%>
          </table>

          <%= erb :_pages_links, :locals => {:cur_page => page,
                                             :size => @item.comments.size,
                                             :per_page => COMMENTS_PER_PAGE,
                                             :identifier => :commentspage}
          %>


      <%end%>

      <h2>Add comment</h2>
      <p>You can use markdown syntax to style the comment. For example: **<b>bold text</b>**</p>
      <form action="<%= "/item/#{@item.id}/add_comment" %>" method="POST">
        <input type="hidden" name="commenter" value="<%= @current_agent %>" />
        <div class="control-group <%= "error" if !@errors.empty? %>">
            <textarea id="newCommentArea" class="field span7" name="comment"
                placeholder="Add some comment, maybe?" rows="7"></textarea>
            <br />
            <% if @errors[:comment] %>
                <span class="help-inline"><%= xss @errors[:comment] %></span>
            <% end %>
        </div>
        <input type="submit" class="btn btn-info" name="submit" value="Add comment" />
      </form>
    </div>
  </div>
</section>
